services:
  app:
    image: seohan02/ottshare:latest
    container_name: ottshare-container
    ports:
      - "8081:8080"
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  mysql:
    image: mysql/mysql-server:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: Kang@2516
      MYSQL_DATABASE: ottshare
    ports:
      - "3306:3306"
    restart: always
    networks:
      - app-network
    volumes:
      - mysql-data:/var/lib/mysql
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - app-network
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
    env_file:
      - .env
    volumes:
      - ./rabbitmq/init.sh:/init.sh
    command: [ "bash", "/init.sh" ]
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  mysql-data:
